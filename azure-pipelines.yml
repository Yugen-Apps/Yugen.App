trigger:
- release/*
pr: none

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'
  appxmanifest: '**/*.appxmanifest'
  versionNumber: 'Set dynamically below in a task'
  artifactName: 'Yugen.Uwp'
  appId: '9NBLGGH10ZKJ'
  flightName: 'Flight'
  
name: $(GITVERSION_AssemblySemFileVer)

stages:
- stage: 'Build'
  jobs:  

  - job: 'Build_QA'
    steps:

    - task: gitversion/setup@0
      inputs:
        versionSpec: '5.x'

    - task: gitversion/execute@0

    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VersionAPPX@2
      inputs:
        VersionNumber: '$(GitVersion.AssemblySemFileVer)'

    - task: VSBuild@1
      inputs:
        platform: 'x64'
        solution: '$(solution)'
        configuration: '$(buildConfiguration)'
        msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" 
                      /p:AppxPackageDir="$(appxPackageDir)" 
                      /p:AppxBundle=Always 
                      /p:UapAppxPackageBuildMode=StoreUpload 
                      /p:AppxPackageSigningEnabled=false'
        msbuildArchitecture: 'x64'
        maximumCpuCount: true

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)\AppxPackages'
        artifactName: '$(artifactName)'

- stage: 'PROD'
  jobs:
  - deployment: 'Deploy_PROD'
    environment: 'PROD'
    strategy:
      runOnce:
        deploy:
          steps:          
          - task: CmdLine@2
            inputs:
              script: |
                echo Write your commands here
                
                dir $(Pipeline.Workspace)
                
                dir $(Pipeline.Workspace)\$(artifactName)

          - task: store-flight@0
            inputs:
              serviceEndpoint: 'Store'
              appId: '$(appId)'
              flightName: '$(flightName)'
              packagePath: '$(Pipeline.Workspace)\$(artifactName)\*.msixupload'
              force: true
              skipPolling: true
              deletePackages: true
              numberOfPackagesToKeep: '1'